@layout AdminLayout

@page "/admin/petugas"

@inject ApplicationDbContext dbContext
@inject DialogService DialogService
@inject IJSRuntime JS

<PageTitle>Petugas</PageTitle>

<div class="noprint">

    <h3 style="margin-bottom:20px">Data Petugas</h3>

    <div style="display:flex; justify-content:space-between">
        <div>
            <RadzenButton Style="margin-bottom:20px" Click=@(args => Add()) Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
            <RadzenButton Style="margin-bottom:20px" Click=@(args => JS.InvokeVoidAsync("doprint")) Icon="printer" ButtonStyle="ButtonStyle.Info" />
        </div>
        <div>
            <RadzenTextBox @bind-Value="searchText" />
            <RadzenButton Style="margin-bottom:20px" Click=@(args => SearchAction(searchText)) Icon="search" ButtonStyle="ButtonStyle.Info" />
        </div>
    </div>


    <RadzenDataGrid @ref="dg" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@datas" TItem="Petugas" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="Petugas" Property="Id" Title="ID" Frozen="true" Width="70px"
                                  TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="Petugas" Property="Nama" Title="Nama " Width="140px" />
            <RadzenDataGridColumn TItem="Petugas" Property="Email" Title="Email" Width="140px" />
            <RadzenDataGridColumn TItem="Petugas" Property="Jabatan" Title="Jabatan" Width="140px" />
            <RadzenDataGridColumn TItem="Petugas" Property="Alamat" Title="Alamat" />
            <RadzenDataGridColumn TItem="Petugas" Title="" Width="80px">
                <Template Context="item">
                    <RadzenButton Click=@(args => Edit(item)) Icon="edit" ButtonStyle="ButtonStyle.Warning" />
                    <RadzenButton Click=@(args => Delete(item)) Icon="delete" ButtonStyle="ButtonStyle.Danger" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>


<div class="onlyprint">
    <div style="display:flex; justify-content:center">
        <h3>DATA PETUGAS</h3>
    </div>

    <table class="table" style="margin-top:30px">
        <tr>
            <th>ID</th>
            <th>Nama</th>
            <th>Email</th>
            <th>Jabatan</th>
            <th>Alamat</th>
        </tr>
        @foreach (var item in datas)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Nama</td>
                <td>@item.Email</td>
                <td>@item.Jabatan</td>
                <td>@item.Alamat</td>
            </tr>
        }
    </table>

</div>


@code {
    IEnumerable<Petugas> datas;
    RadzenDataGrid<Petugas> dg;
    protected override Task OnInitializedAsync()
    {
        datas = dbContext.Petugas;
        return base.OnInitializedAsync();
    }


    string searchText;
    async Task SearchAction(string text)
    {
        datas = dbContext.Petugas.Where(x => x.Nama.Contains(text) || x.Email.Contains(text) || x.Jabatan.Contains(text) || x.Alamat.Contains(text));
    }


    async Task Add()
    {
        var result = await DialogService.OpenAsync<DialogAddPetugas>($"Tambah Petugas",
                new Dictionary<string, object>() { { "ID", 0 } },
                new DialogOptions() { Width = "500px", Height = "600px", Resizable = true, Draggable = true });

        if (result.GetType() == typeof(Petugas))
        {
            var data = result as Petugas;
            await dg.Reload();
        }
    }



    async Task Edit(Petugas alat)
    {
        var result = await DialogService.OpenAsync<DialogAddPetugas>($"Edit Petugas",
                new Dictionary<string, object>() { { "ID", alat.Id } },
                new DialogOptions() { Width = "500px", Height = "600px", Resizable = true, Draggable = true });

        if (result.GetType() == typeof(Petugas))
        {

        }


    }

    async Task Delete(Petugas alat)
    {
        var result = await DialogService.Confirm("Yakin Hapus Data ?", "Delete", new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });
        if (result.Value)
        {
            dbContext.Petugas.Remove(alat);
            await dbContext.SaveChangesAsync();
            await dg.Reload();
        }

    }
}