@layout AdminLayout

@page "/admin/alatkontrasepsi"

@inject ApplicationDbContext dbContext
@inject DialogService DialogService
<PageTitle>Alat Kontrasepsi</PageTitle>


<h3 style="margin-bottom:20px">Alat Kontrasepsi</h3>


      <div style="display:flex; justify-content:space-between">
        <div>
 <RadzenButton Style="margin-bottom:20px" Click=@(args => Add()) Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
        </div>
        <div>
            <RadzenTextBox @bind-Value="searchText" />
            <RadzenButton Style="margin-bottom:20px" Click=@(args => SearchAction(searchText)) Icon="search" ButtonStyle="ButtonStyle.Info" />
        </div>
    </div>




 <RadzenDataGrid @ref="dg" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" 
 AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" 
 ShowPagingSummary="true"
        Data="@datas" TItem="AlatKontrasepsi" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="AlatKontrasepsi" Property="Id" Title="ID" Frozen="true" Width="70px" 
            TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="AlatKontrasepsi" Property="Nama" Title="Nama " Width="140px" />
            <RadzenDataGridColumn TItem="AlatKontrasepsi" Property="Keterangan" Title="Keterangan"  />
            <RadzenDataGridColumn TItem="AlatKontrasepsi" Title="" Width="80px"  >
                <Template Context="item">
                      <RadzenButton Click=@(args => Edit(item))  Icon="edit" ButtonStyle="ButtonStyle.Warning" />
                      <RadzenButton Click=@(args => Delete(item))  Icon="delete" ButtonStyle="ButtonStyle.Danger" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>


@code{
    IEnumerable<AlatKontrasepsi> datas;
    RadzenDataGrid<AlatKontrasepsi> dg;
    protected override Task OnInitializedAsync()
    {
        datas = dbContext.AlatKontrasepsi;
        return base.OnInitializedAsync();
    }

    string searchText;
    async Task SearchAction(string text)
    {
        datas = dbContext.AlatKontrasepsi.Where(x => x.Nama.Contains(text) || x.Keterangan.Contains(text) );
    }



    async Task Add()
    {
        var result =  await DialogService.OpenAsync<DialogAddAlatKontrasepsi>($"Tambah Alat Kontrasepsi",
                new Dictionary<string, object>() { { "ID", 0} },
                new DialogOptions() { Width = "500px", Height = "400px", Resizable = true, Draggable = true });

        if(result.GetType()== typeof(AlatKontrasepsi))
        {
            var data = result as AlatKontrasepsi;
          await  dg.Reload();
        }
    }



    async Task Edit( AlatKontrasepsi alat)
    {
        var result = await DialogService.OpenAsync<DialogAddAlatKontrasepsi>($"Edit Alat Kontrasepsi",
                new Dictionary<string, object>() { { "ID", alat.Id} },
                new DialogOptions() { Width = "500px", Height = "400px", Resizable = true, Draggable = true });

        if(result.GetType()== typeof(AlatKontrasepsi))
        {
            
        }


    }

    async Task Delete( AlatKontrasepsi alat)
    {
        var result = await DialogService.Confirm("Yakin Hapus Data ?", "Delete", new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });
        if (result.Value)
        {
            dbContext.AlatKontrasepsi.Remove(alat);
           await dbContext.SaveChangesAsync();
           await  dg.Reload();
        }

    }
}