@layout PetugasLayout

@page "/petugas/layanan"
@using MainWeb.Pages.admins
@using Microsoft.EntityFrameworkCore


@inject IJSRuntime JS
@inject ApplicationDbContext dbContext
@inject DialogService DialogService
@inject NavigationManager nav


<div class="noprint">
    <h3 style="margin-bottom:20px">Data Pengajuan dan Pelayanan</h3>
   <div style="display:flex; justify-content:space-between">
        <RadzenButton Style="margin-bottom:20px" Click=@(args => JS.InvokeVoidAsync("doprint")) Icon="printer" ButtonStyle="ButtonStyle.Warning" />
       <div>
            <RadzenTextBox @bind-Value="searchText" />
        <RadzenButton Style="margin-bottom:20px" Click=@(args => SearchAction(searchText)) Icon="search" ButtonStyle="ButtonStyle.Info" />
       </div>
   </div>
    <RadzenDataGrid @ref="dg" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced"
                    AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                    ShowPagingSummary="true"
                    Data="@datas" TItem="Pelayanan" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenDataGridColumn TItem="Pelayanan" Property="Id" Title="ID" Frozen="true" Width="70px"
                                  TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="Pelayanan" Title="Tanggal" Width="120px">
                <Template Context="item">
                    @item.Tanggal.ToString("dd/MM/yyyy")
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Pelayanan" Property="NamaPeserta" Title="Peserta" />
            <RadzenDataGridColumn TItem="Pelayanan" Property="AlamatPeserta" Title="Alamat" />
            <RadzenDataGridColumn TItem="Pelayanan" Property="AlatKontrasepsiPilihan.Nama" Title="Kontrasepsi Pilihan" Width="200px" />
            <RadzenDataGridColumn TItem="Pelayanan" Property="TanggalDilayani" Title="Dilayani" Width="180px" />
            <RadzenDataGridColumn TItem="Pelayanan" Title="" Width="120px">
                <Template Context="item">
                    <RadzenButton Click=@(args => Edit(item)) Icon="list" ButtonStyle="ButtonStyle.Warning" />
                    <RadzenButton Click=@(args => Delete(item)) Icon="delete" ButtonStyle="ButtonStyle.Danger" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>


@if (datas != null)
{

    <div class="onlyprint">
        <div style="display:flex; justify-content:center; flex-direction:column;align-items:center">
            <h5>LAPORAN DATA PENGAJUAN PELAYANAN/PEMASANGAN</h5>
            <h5>ALAT KONTRASEPSI</h5>
        </div>

        <table class="table" style="margin-top:30px">
            <tr>
                <th>ID</th>
                <th>Tanggal Pengajuan</th>
                <th>Nama</th>
                <th>Alamat</th>
                <th>Kontrasepsi Pilihan</th>
                <th>Dilayani</th>
            </tr>
            @foreach (var item in datas)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Tanggal.ToString("dd-MM-yyyy")</td>
                    <td>@item.NamaPeserta</td>
                    <td style="width:30%">@item?.AlamatPeserta</td>
                    <td>@(item.AlatKontrasepsiPilihan!=null ? item.AlatKontrasepsiPilihan.Nama:"")</td>
                    <td>@(item.TanggalDilayani!=null?item.TanggalDilayani.Value.ToString("dd-MM-yyyy"):"")</td>
                </tr>
            }
        </table>

    </div>


}


@code {

    IEnumerable<Pelayanan> datas = new List<Pelayanan>();
    RadzenDataGrid<Pelayanan> dg;
    protected override Task OnInitializedAsync()
    {
        datas = from a in dbContext.Pelayanan.Include(x => x.AlatKontrasepsiPilihan)
                join b in dbContext.Peserta on a.PesertaId equals b.Id
                select new Pelayanan { Id = a.Id, NamaPeserta = b.Nama, AlamatPeserta = b.Alamat, AlatKontrasepsiPilihan = a.AlatKontrasepsiPilihan, Tanggal = a.Tanggal, TanggalDilayani = a.TanggalDilayani };
        return base.OnInitializedAsync();
    }


    string searchText;
    async Task SearchAction(string text)
    {
        var result = from a in dbContext.Pelayanan.Include(x => x.AlatKontrasepsiPilihan)
                     join b in dbContext.Peserta on a.PesertaId equals b.Id
                     select new Pelayanan { Id = a.Id, NamaPeserta = b.Nama, AlamatPeserta = b.Alamat, AlatKontrasepsiPilihan = a.AlatKontrasepsiPilihan, Tanggal = a.Tanggal, TanggalDilayani = a.TanggalDilayani };

        datas = result.Where(x =>  x.NamaPeserta.Contains(text) || x.AlamatPeserta.Contains(text) || x.AlatKontrasepsiPilihan.Nama.Contains(text));
    }



    async Task Edit(Pelayanan alat)
    {
        nav.NavigateTo($"/petugas/layanan/{alat.Id}");
    }

    async Task Delete(Pelayanan alat)
    {
        var result = await DialogService.Confirm("Yakin Hapus Data ?", "Delete", new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });
        if (result.Value)
        {
            dbContext.Pelayanan.Remove(alat);
            await dbContext.SaveChangesAsync();
            await dg.Reload();
        }

    }
}