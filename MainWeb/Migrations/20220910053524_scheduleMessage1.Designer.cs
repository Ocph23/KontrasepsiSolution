// <auto-generated />
using System;
using MainWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MainWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220910053524_scheduleMessage1")]
    partial class scheduleMessage1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MainWeb.Models.AlatKontrasepsi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AlatKontrasepsi");
                });

            modelBuilder.Entity("MainWeb.Models.KunjunganUlang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("BeratBadan")
                        .HasColumnType("double");

                    b.Property<bool>("Datang")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("HaidTerakhir")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Kegagalan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KompilasiBerat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("KonsultasiBerikut")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PelayananId")
                        .HasColumnType("int");

                    b.Property<string>("PemeriksaanDanTindakan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PetugasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TekananDarah")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PelayananId");

                    b.HasIndex("PetugasId");

                    b.ToTable("KunjunganUlang");
                });

            modelBuilder.Entity("MainWeb.Models.Pelayanan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AlatKontrasepsiPilihanId")
                        .HasColumnType("int");

                    b.Property<int>("AnakHidupLaki")
                        .HasColumnType("int");

                    b.Property<int>("AnakHidupPerempuan")
                        .HasColumnType("int");

                    b.Property<double>("BeratBadan")
                        .HasColumnType("double");

                    b.Property<int?>("CaraKBTerakhirId")
                        .HasColumnType("int");

                    b.Property<bool>("Diabetes")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Hamil")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("JumlahKeguguran")
                        .HasColumnType("int");

                    b.Property<int>("JumlahKehamilan")
                        .HasColumnType("int");

                    b.Property<int>("JumlahPersalinan")
                        .HasColumnType("int");

                    b.Property<int>("Keadaan")
                        .HasColumnType("int");

                    b.Property<bool>("KeganasanGinekologi")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("KeganasanGinekologi2")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("KeputihanYangLama")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Menyusui")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PemekuanDarah")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PenanggungJawab")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PendarahanPervaginam")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PesertaId")
                        .HasColumnType("int");

                    b.Property<int?>("PetugasId")
                        .HasColumnType("int");

                    b.Property<int>("PosisiRahim")
                        .HasColumnType("int");

                    b.Property<bool>("Radang")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RadangOrchitis")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SakitKuning")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StatusKB")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TanggalDicabut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TanggalDilayani")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TanggalKembali")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TekananDarah")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TerakhirHaid")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Tumor")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UmurAnakTerkecilBulan")
                        .HasColumnType("int");

                    b.Property<int>("UmurAnakTerkecilTahun")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlatKontrasepsiPilihanId");

                    b.HasIndex("CaraKBTerakhirId");

                    b.HasIndex("PesertaId");

                    b.HasIndex("PetugasId");

                    b.ToTable("Pelayanan");
                });

            modelBuilder.Entity("MainWeb.Models.Peserta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JKN")
                        .HasColumnType("int");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("int");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NamaPasangan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Pekerjaan")
                        .HasColumnType("int");

                    b.Property<int>("PekerjaanPasangan")
                        .HasColumnType("int");

                    b.Property<int>("Pendidikan")
                        .HasColumnType("int");

                    b.Property<int>("PendidikanPasangan")
                        .HasColumnType("int");

                    b.Property<string>("TahapanKS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TanggalLahir")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Peserta");
                });

            modelBuilder.Entity("MainWeb.Models.Petugas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Jabatan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telepon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Petugas");
                });

            modelBuilder.Entity("MainWeb.Models.ScheduleMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PesertaId")
                        .HasColumnType("int");

                    b.Property<bool>("Sended")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MainWeb.Models.KunjunganUlang", b =>
                {
                    b.HasOne("MainWeb.Models.Pelayanan", null)
                        .WithMany("Kunjungan")
                        .HasForeignKey("PelayananId");

                    b.HasOne("MainWeb.Models.Petugas", "Petugas")
                        .WithMany()
                        .HasForeignKey("PetugasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Petugas");
                });

            modelBuilder.Entity("MainWeb.Models.Pelayanan", b =>
                {
                    b.HasOne("MainWeb.Models.AlatKontrasepsi", "AlatKontrasepsiPilihan")
                        .WithMany()
                        .HasForeignKey("AlatKontrasepsiPilihanId");

                    b.HasOne("MainWeb.Models.AlatKontrasepsi", "CaraKBTerakhir")
                        .WithMany()
                        .HasForeignKey("CaraKBTerakhirId");

                    b.HasOne("MainWeb.Models.Peserta", null)
                        .WithMany("Pelayanan")
                        .HasForeignKey("PesertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MainWeb.Models.Petugas", "Petugas")
                        .WithMany()
                        .HasForeignKey("PetugasId");

                    b.Navigation("AlatKontrasepsiPilihan");

                    b.Navigation("CaraKBTerakhir");

                    b.Navigation("Petugas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MainWeb.Models.Pelayanan", b =>
                {
                    b.Navigation("Kunjungan");
                });

            modelBuilder.Entity("MainWeb.Models.Peserta", b =>
                {
                    b.Navigation("Pelayanan");
                });
#pragma warning restore 612, 618
        }
    }
}
